"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[363],{8519:function(e,a,n){n.r(a),n.d(a,{SBTInstallCodeBlock:function(){return k},assets:function(){return d},contentTitle:function(){return p},default:function(){return g},frontMatter:function(){return l},metadata:function(){return m},toc:function(){return u}});var t=n(2685),i=n(1244),o=(n(7378),n(5318)),r=n(4014),s=n(4603),c=["components"],l={id:"as-scala-library",title:"As Scala Library"},p=void 0,m={unversionedId:"usage/as-scala-library",id:"usage/as-scala-library",title:"As Scala Library",description:"Describes how to use recheck as a Scala library.",source:"@site/docs/usage/as-scala-library.mdx",sourceDirName:"usage",slug:"/usage/as-scala-library",permalink:"/recheck/docs/usage/as-scala-library",draft:!1,editUrl:"https://github.com/makenowjust-labs/recheck/tree/main/website/docs/usage/as-scala-library.mdx",tags:[],version:"current",frontMatter:{id:"as-scala-library",title:"As Scala Library"},sidebar:"docs",previous:{title:"As JavaScript Library",permalink:"/recheck/docs/usage/as-javascript-library"},next:{title:"As ESLint Plugin",permalink:"/recheck/docs/usage/as-eslint-plugin"}},d={},u=[{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2},{value:"Cancel",id:"cancel",level:3}],k=function(){var e=(0,r.Z)().siteConfig.customFields.version;return(0,o.kt)(s.Z,{title:"build.sbt",className:"language-scala",mdxType:"CodeBlock"},'libraryDependencies += "codes.quine.labs" %% "recheck-core" % "',e,'"')},h={toc:u,SBTInstallCodeBlock:k};function g(e){var a=e.components,n=(0,i.Z)(e,c);return(0,o.kt)("wrapper",(0,t.Z)({},h,n,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Describes how to use ",(0,o.kt)("inlineCode",{parentName:"p"},"recheck")," as a Scala library."),(0,o.kt)("h2",{id:"install"},"Install"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://search.maven.org/artifact/codes.quine.labs/recheck-core_2.13"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/maven-central/v/codes.quine.labs/recheck-core_2.13?logo=scala&style=for-the-badge",alt:"Maven Central"}))),(0,o.kt)("p",null,"To install the Scala library of ",(0,o.kt)("inlineCode",{parentName:"p"},"recheck"),", you should append the following line into your ",(0,o.kt)("inlineCode",{parentName:"p"},"build.sbt"),"."),(0,o.kt)(k,{mdxType:"SBTInstallCodeBlock"}),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"ReDoS.check")," is the only entry point for checking the vulnerability of regular expression."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import codes.quine.labs.recheck.ReDoS\n\nReDoS.check("^(a|a)*$", "")\n')),(0,o.kt)("p",null,"The first argument of ",(0,o.kt)("inlineCode",{parentName:"p"},"ReDoS.check")," is the ",(0,o.kt)("inlineCode",{parentName:"p"},"source")," which is corresponding to ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/source"},(0,o.kt)("inlineCode",{parentName:"a"},"RegExp.prototype.source")),".\nAnd, the second argument is the ",(0,o.kt)("inlineCode",{parentName:"p"},"flags")," which is corresponding to ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/flags"},(0,o.kt)("inlineCode",{parentName:"a"},"RegExp.prototype.flags"))," too.\nThe third argument is the ",(0,o.kt)("inlineCode",{parentName:"p"},"params")," to specify parameters for the checker behavior, and the fourth is the ",(0,o.kt)("inlineCode",{parentName:"p"},"token")," to cancel the checking in the middle."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"See ",(0,o.kt)("a",{parentName:"p",href:"/recheck/docs/usage/parameters"},"this page")," for detailed information on ",(0,o.kt)("inlineCode",{parentName:"p"},"Parameters")," value.")),(0,o.kt)("p",null,"The result of ",(0,o.kt)("inlineCode",{parentName:"p"},"ReDoS.check")," is called ",(0,o.kt)("inlineCode",{parentName:"p"},"Diagnostics"),".\n",(0,o.kt)("inlineCode",{parentName:"p"},"Diagnostics")," is a ",(0,o.kt)("inlineCode",{parentName:"p"},"sealed class"),", and it has three child classes."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Diagnostics.Safe")," means the given regular expression seems safe at least in this checking."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Diagnostics.Vulnerable")," means vulnerability in the given regular expression is found."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Diagnostics.Unknown")," means something wrong happened in checking (timeout, cancel, or error).")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"See ",(0,o.kt)("a",{parentName:"p",href:"/recheck/docs/usage/diagnostics"},"this page")," for detailed information on ",(0,o.kt)("inlineCode",{parentName:"p"},"Diagnostics")," value.")),(0,o.kt)("h3",{id:"cancel"},"Cancel"),(0,o.kt)("p",null,"The fourth argument of ",(0,o.kt)("inlineCode",{parentName:"p"},"ReDoS.check")," is used to cancel the checking in the middle.\nThis type is ",(0,o.kt)("inlineCode",{parentName:"p"},"CancellationToken")," which is created by ",(0,o.kt)("inlineCode",{parentName:"p"},"CancellationTokenSource"),".\nNoting that ",(0,o.kt)("inlineCode",{parentName:"p"},"ReDoS.check")," blocks the process, you should use this with concurrent libraries like ",(0,o.kt)("inlineCode",{parentName:"p"},"scala.concurrent"),"or ",(0,o.kt)("a",{parentName:"p",href:"https://typelevel.org/cats-effect/"},(0,o.kt)("inlineCode",{parentName:"a"},"cats-effect")),"."),(0,o.kt)("p",null,"The following example is usage with ",(0,o.kt)("inlineCode",{parentName:"p"},"cats-effect"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import scala.concurrent.duration._\n\nimport cats.effect._\nimport cats.effect.unsafe.implicits.global\n\nimport codes.quine.labs.recheck.ReDoS\nimport codes.quine.labs.recheck.common.CancellationTokenSource\nimport codes.quine.labs.recheck.common.Parameters\nimport codes.quine.labs.recheck.diagnostics.Diagnostics\n\nval cancellation = new CancellationTokenSource\n\nval io = for {\n  fiber <- IO(ReDoS.check("^a+a+$", "", Parameters(), Some(cancellation.token))).start\n  _ <- (IO.sleep(100.millisecond) *> IO(cancellation.cancel())).start\n  diagnostics <- fiber.joinWithNever\n  _ <- IO.println(diagnostics)\n} yield ()\n\nio.unsafeRunSync()\n')),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"There is the ",(0,o.kt)("inlineCode",{parentName:"p"},"timeout")," parameter to specify timeout seconds.\nPlease use this instead of the manual way.")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"The above example does not work with ",(0,o.kt)("inlineCode",{parentName:"p"},"cats-effect")," better actually, because ",(0,o.kt)("inlineCode",{parentName:"p"},"fiber")," has ",(0,o.kt)("inlineCode",{parentName:"p"},"cancel")," method and it does not work with this method."),(0,o.kt)("p",{parentName:"admonition"},"To fix this problem, we can use ",(0,o.kt)("inlineCode",{parentName:"p"},"IO.async"),". The following is the complete example. However, by ",(0,o.kt)("inlineCode",{parentName:"p"},"cats-effect")," restriction, it will lose a result diagnostics when a fiber is cancelled."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import scala.concurrent.duration._\n\nimport cats.effect._\nimport cats.effect.unsafe.implicits.global\n\nimport codes.quine.labs.recheck.ReDoS\nimport codes.quine.labs.recheck.common.CancellationTokenSource\nimport codes.quine.labs.recheck.common.Parameters\nimport codes.quine.labs.recheck.diagnostics.Diagnostics\n\ndef cancelableCheck(source: String, flags: String, params: Parameters): IO[Diagnostics] =\n  IO.executionContext.flatMap { ec =>\n    IO.async { cb =>\n      IO {\n        val cancellation = new CancellationTokenSource\n        ec.execute(() => {\n          val diagnostics = ReDoS.check(source, flags, params, Some(cancellation.token))\n          cb(Right(diagnostics))\n        })\n        Some(IO(cancellation.cancel()))\n      }\n    }\n  }\n\nval io = for {\n  fiber <- cancelableCheck("^a+a+$", "", Parameters()).start\n  _ <- (IO.sleep(100.millisecond) *> fiber.cancel).start\n  diagnostics <- fiber.join\n  _ <- IO.println(diagnostics)\n} yield ()\n\nio.unsafeRunSync()\n'))))}g.isMDXComponent=!0}}]);